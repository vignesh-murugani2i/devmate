name: Build Windows App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Fix package-lock.json
        run: |
          if (Test-Path package-lock.json) { Remove-Item package-lock.json }
          npm install --package-lock-only
          
      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app (Windows)
        run: |
          npm run tauri build -- --target x86_64-pc-windows-msvc --bundles msi,nsis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows MSI
        uses: actions/upload-artifact@v4
        with:
          name: DevMate-Windows-x64.msi
          path: src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
          if-no-files-found: error

      - name: Upload Windows NSIS Installer
        uses: actions/upload-artifact@v4
        with:
          name: DevMate-Windows-x64-setup.exe
          path: src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
          if-no-files-found: error

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
          generate_release_notes: true
          draft: false
          prerelease: false